package accesodatos;

import java.util.ArrayList;



import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

public class FachadaCoordenadas {
	Context context;
	CoordenadasSQLiteHelper Helpercoordenadas;
	SQLiteDatabase DBCoordenadas;
	private static FachadaCoordenadas myFachada;

	private FachadaCoordenadas(Context context) {
		this.context = context;
		Log.i("gps",
				"ya tenemos la fachada de Coordenadas, ahora a por el helper");
		Helpercoordenadas = new CoordenadasSQLiteHelper(context, "DBCoordenadas", null,
				1);
		Log.i("gps", "helper coordenadas creado correctamente");

	}

	public static FachadaCoordenadas getInstance(Context context) {

		Log.i("gps", "entramos en getInstance");
		if (myFachada == null) {
			Log.i("gps", "my fachada vale null");
			myFachada = new FachadaCoordenadas(context);
		}
		return myFachada;
	}

	public void closeFachada() {
		Log.i("gps", "closeFachada,cerramos el helper");
		Helpercoordenadas.close();
		myFachada = null;
	}

	public void loadCoordenadas(ArrayList<Integer> id,ArrayList<Double> longitud,ArrayList<Double> latitud,ArrayList<Integer> fecha) {
		Log.i("gps", "loadCoordenadas,creamos el comando");
		ArrayList<Script> resultado = new ArrayList<Script>();

		Script comando = null;
		Log.i("gps", "pedimos al helper la base de datos para leer");
		DBCoordenadas = Helpercoordenadas.getReadableDatabase();
		Cursor c2;
		Cursor c = DBCoordenadas.rawQuery("SELECT * FROM scripts", null);
		if (c.moveToFirst()) {
			Log.i("gps", "loadCoordenadas,hay datos");
			do {
				int id = c.getInt(0);
				String nombre = c.getString(1);
				int cantidad = c.getInt(2);
				comando = new Script(nombre, cantidad, id);

				c2 = DBCoordenadas.rawQuery(
						"SELECT comando FROM Coordenadas WHERE idScript=" + id,
						null);
				if (c2.moveToFirst()) {
					do {
						comando.addComando(c2.getString(0));
					} while (c2.moveToNext());
				}
				c2.close();

				resultado.add(comando);
			} while (c.moveToNext());

		} else {
			Log.i("gps", "loadCoordenadas,no hay datos en la base de datos");
		}

		Log.i("gps", "cerramos la base de datos");
		DBCoordenadas.close();
		return resultado;
	}

	public void insertCoordenadas(Double longitud,Double latitud ,int fecha) {
		

		Log.i("gps", "fachada,insert,conseguimos la bd en forma W");
		DBCoordenadas = Helpercoordenadas.getWritableDatabase();
		if (DBCoordenadas != null) {
			Log.i("gps", "hemos conseguido la base de datos para añadir");
			try {
				Log.i("gps", "ejecutamos el insert");
				DBCoordenadas
						.execSQL("INSERT INTO coordenadas(idScript,nombre,cantidad) VALUES (NULL,"
								+ longitud + "," + latitud + ", "+fecha+")");
			} catch (SQLException e) {
				Log.e("gps", "error al introducir");
			}
			Log.i("gps", "cerramos la base de datos");
			DBCoordenadas.close();

		} else {
			Log.i("gps", "no hemos conseguido la base, retornamos null");
		}

	}

	public void deleteComando(int id) {
		Log.i("gps", "vamos a borrar");
		String sql = "DELETE FROM coordenadas WHERE idCoordenada=" + id;
		DBCoordenadas = Helpercoordenadas.getWritableDatabase();
		if (DBCoordenadas != null) {
			Log.i("gps", "hemos conseguido la base de datos");
			try {
				DBCoordenadas.execSQL(sql);

			} catch (SQLException e) {
				Log.e("gps", "error al borrar,clave incorrecta? id = " + id);
			}
			Log.i("gps", "cerramos la base de datos");
			DBCoordenadas.close();
		} else {
			Log.i("gps", "no hemos conseguido la base, retornamos null");
		}
	}

	

	public void borraTabla() {
		String sql = "DROP TABLE IF EXISTS coordenadas";
		 String sqlCreate1 = "CREATE TABLE coordenadas (idCoordenada INTEGER PRIMARY KEY,longitud REAL,latitud REAL,fecha INTEGER)";
		
		
		DBCoordenadas = Helpercoordenadas.getWritableDatabase();
		if (DBCoordenadas != null) {
			Log.i("gps", "hemos conseguido la base de datos");
			try {
				DBCoordenadas.execSQL(sql);
				
				Log.i("gps", "hemos borrado, ahora a crearla");
				DBCoordenadas.execSQL(sqlCreate1);
				
				Log.i("gps", "se ha creado de nuevo la tabla");

			} catch (SQLException e) {
				Log.e("gps", "error al borrar la tabla");
			}
			Log.i("gps", "cerramos la base de datos");
			DBCoordenadas.close();
		} else {
			Log.i("gps", "no hemos conseguido la base, retornamos null");
		}
		myFachada = null;
		Helpercoordenadas = new CoordenadasSQLiteHelper(context, "DBCoordenadas", null,
				1);
	}
}